<!--
    AmplitudeSoundboard
    Copyright (C) 2021 dan0v
    https://git.dan0v.com/AmplitudeSoundboard

    This file is part of AmplitudeSoundboard.

    AmplitudeSoundboard is free software: you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.

    AmplitudeSoundboard is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.

    You should have received a copy of the GNU General Public License
    along with AmplitudeSoundboard.  If not, see <https://www.gnu.org/licenses/>.
-->
<UserControl xmlns="https://github.com/avaloniaui"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:i18n="clr-namespace:Amplitude.Localization"
             xmlns:vm="using:Amplitude.ViewModels"
             mc:Ignorable="d" d:DesignWidth="150" d:DesignHeight="150"
             Height="{Binding Height}" Width="{Binding Width}"
             x:Class="Amplitude.Views.SoundBoardGridItem">
  <UserControl.Styles>
    <Style Selector="Image:disabled">
      <Setter Property="Opacity" Value="0.5"/>
    </Style>
    <Style Selector="TextBlock">
      <Setter Property="FontFamily" Value="{Binding ThemeHandler.BodyFont}"/>
    </Style>
    <Style Selector="TextBox">
      <Setter Property="FontFamily" Value="{Binding ThemeHandler.BodyFont}"/>
    </Style>
    <Style Selector="Button">
      <Setter Property="FontFamily" Value="{Binding ThemeHandler.BodyFont}"/>
    </Style>
  </UserControl.Styles>

  <Design.DataContext>
    <vm:SoundBoardGridItemViewModel/>
  </Design.DataContext>

  <Border BorderThickness="2" CornerRadius="5" ClipToBounds="True" IsEnabled="{Binding !GlobalSettingsWindowOpen}">
    <Border.BorderBrush>
      <SolidColorBrush Color="{Binding ThemeHandler.BorderColor}"/>
    </Border.BorderBrush>
    
    <Grid x:Name="grd_Control" Cursor="{Binding Cursor}" ToolTip.Tip="{Binding Model.PlayAudioTooltip}" Background="Transparent">
      <Grid.ContextMenu>
        <ContextMenu>
          <MenuItem Command="{Binding CreateClipInPlace}" Header="{i18n:Localize CreateClipInPlace}"></MenuItem>
          <MenuItem IsEnabled="{Binding SoundClipExists}" Command="{Binding Model.CopySoundClipId}" Header="{i18n:Localize CopyToClipboard}"></MenuItem>
          <MenuItem Command="{Binding PasteClip}" IsEnabled="{Binding Manager.CopiedClipId, Converter={x:Static StringConverters.IsNotNullOrEmpty}}" Header="{i18n:Localize PasteClip}"></MenuItem>
          <MenuItem IsEnabled="{Binding SoundClipExists}" Command="{Binding Model.OpenEditSoundClipWindow}" Header="{i18n:Localize EditSoundClipTooltip}"></MenuItem>
          <MenuItem IsEnabled="{Binding SoundClipExists}" Command="{Binding Unbind}" Header="{i18n:Localize ClearTile}"></MenuItem>
        </ContextMenu>
      </Grid.ContextMenu>

      <Grid IsVisible="{Binding Model.Id, Converter={x:Static StringConverters.IsNullOrEmpty}}" >
        <Grid.Background>
          <SolidColorBrush Color="{Binding ThemeHandler.FadedTextBackgroundColor}" Opacity="0.5"/>
        </Grid.Background>
      </Grid>
        
      <Grid IsVisible="{Binding Model.Id, Converter={x:Static StringConverters.IsNotNullOrEmpty}}" RowDefinitions="*,Auto" >
        <Grid.Background>
          <ImageBrush Source="{Binding Model.BackgroundImage}" Stretch="UniformToFill" Opacity="{Binding BackgroundOpacity}"/>
        </Grid.Background>

        <!--Conditional XAML is kind of terrible when having to use IsVisible... Center Model.Name if no background image set, otherwise push to bottom with semi-transparent background-->
        <Panel Grid.Row="0" IsVisible="{Binding Model.ImageFilePath, Converter={x:Static StringConverters.IsNullOrEmpty}}">
          <TextBlock IsVisible="{Binding Model.NameVisibleOnGridTile}" Opacity="{Binding BackgroundOpacity}" VerticalAlignment="Center" TextWrapping="Wrap" TextAlignment="Center" HorizontalAlignment="Center" FontWeight="SemiBold" Text="{Binding Model.Name}" Margin="2"></TextBlock>
        </Panel>

        <Panel Grid.Row="1" IsVisible="{Binding Model.ImageFilePath, Converter={x:Static StringConverters.IsNotNullOrEmpty}}">
          <Border Grid.Row="1" IsVisible="{Binding Model.NameVisibleOnGridTile}" BorderThickness="0,1,0,0" >
            <Border.BorderBrush>
              <SolidColorBrush Color="{Binding ThemeHandler.BorderColor}"/>
            </Border.BorderBrush>
            <Panel>
              <Panel.Background>
                <SolidColorBrush Color="{Binding ThemeHandler.FadedTextBackgroundColor}" Opacity="0.4"/>
              </Panel.Background>
              <TextBlock Opacity="{Binding BackgroundOpacity}" VerticalAlignment="Center" TextWrapping="Wrap" TextAlignment="Center" HorizontalAlignment="Center" FontWeight="SemiBold" Text="{Binding Model.Name}" Margin="2"></TextBlock>
            </Panel>
          </Border>
        </Panel>
      </Grid>
    </Grid>
  </Border>
</UserControl>
